{"version":3,"sources":["components/Navbar.js","TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggle","role","forhtml","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","backgroundColor","htmlFor","heading","value","onChange","event","target","rows","toUpperCase","length","showalert","toLowerCase","split","reverse","join","Alert","alert","msg","data-bs-dismiss","App","setmode","_useState3","_useState4","setalert","message","setTimeout","Fragment","abouttitle","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cd1652b6.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\n\nexport default function Navbar(props) {\n  return (\n    <div>\n         <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\n        </li>\n        {/* <li className=\"nav-item\">\n          <a className=\"nav-link\" href=\"/about\">{props.abouttitle}</a>\n        </li> */}\n    \n      </ul>\n      {/* <form className=\"d-flex\" role=\"search\">\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n      </form> */}\n\n      <div className={`form-check form-switch text-${props.mode==='light' ? 'dard' : 'light' }`}>\n  <input className=\"form-check-input\"  onClick={props.toggle} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\n  <label className=\"form-check-label\" forhtml=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\n\n</div>\n\n\n      \n    </div>\n  </div>\n</nav>\n    </div>\n  )\n}\nNavbar.propTypes={\n     title : PropTypes.string.isRequired,\n     abouttitle: PropTypes.string.isRequired\n     \n}","import React,{useState} from 'react'\n \nexport default function TextForm(props) {\n\n  const [text,setText] = useState(\"\");\n  const handleupclick = ()=>{\n       \n     setText(text.toUpperCase());\n     text.length > 0 ? props.showalert(\"Converted to UpperCase\",\"success\"): props.showalert(\"enter text first\",\"danger\");\n       \n  }\nconst handleonchange= (event)=>{\n   \n    setText(event.target.value);\n\n\n\n}\nconst handledownclick=()=>{\n  setText(text.toLowerCase());\n  text.length>0 ? props.showalert(\"Converted to LowerCase! \",\"success\"): props.showalert(\"enter text first\",\"danger\");\n}\nconst handleclearclick = ()=>{ \n  setText(\"\");\n  \n  text.length>0 ? props.showalert(\"Text Cleared!\",\"success\"): props.showalert(\"enter text first\",\"danger\");\n}\nconst handlereverseclick = ()=>{\n\n   setText( text.split('').reverse().join(''));\n   text.length>0 ? props.showalert(\"Reverse paragraph\",\"success\"): props.showalert(\"enter text first\",\"danger\");\n}\n\n\n  return (\n   <div>\n<div className=\"my-3 container\" style={{ color :props.mode==='dark'? 'white' : 'black' , backgroundColor: props.mode==='dark' ? '#2c4262' : 'white'}}>\n\n  <label htmlFor=\"exampleFormControlTextarea1\" className=\"form-label\">{props.heading}</label>\n\n  <textarea className=\"form-control\"  value={text} style={{ color :props.mode==='dark'? 'white' : 'black' , backgroundColor: props.mode==='dark' ? '#2c4262' : 'white'}} onChange={handleonchange}  id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\n\n   <button className=\"btn btn-primary my-2  mx-2\" onClick={handleupclick}> Convert to UpperCase</button>\n   <button className=\"btn btn-primary my-2 mx-2\" onClick={handledownclick}>Convrt to LowerCase </button>\n   <button className=\"btn btn-primary my-2 mx-2\" onClick={handleclearclick}> clear</button>\n   <button className=\"btn btn-primary my-2 mx-2\" onClick={handlereverseclick}> reverse</button>\n\n</div>\n<div className=\"container my-3\" style={{ color :props.mode==='dark'? 'white' : 'black' , backgroundColor: props.mode==='dark' ? '#2c4262' : 'white'}}>\n  <h1> Your Text Summary</h1>\n  <p> {text.split(\" \").length} words and {text.length} characters</p>\n  <p> {0.008 * text.split(\" \").length} minutes required</p>\n  <p> {text.split(\".\").length} word per sentence</p>\n  \n  <h1>Preview</h1>\n  <p> { text.length>0 ? text: \"Enter Somethig to Preview it here\"} </p>\n\n</div>\n   </div>\n  )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n  return (\n     props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n  <strong>{props.alert.type}</strong>  :  {props.alert.msg}\n  <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n</div>\n      \n  \n  )\n}\n","import About from './About';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './TextForm';\nimport React,{useState} from 'react'\nimport Alert from './components/Alert';\n\nfunction App() {\n  const [mode,setmode]= useState(\"light\");\n  const [alert,setalert]= useState(null);\n const showalert=(message,type)=>{\n      setalert({\n        msg:message,\n        type:type\n      })\n      setTimeout(() => {\n         setalert(null);\n      }, 1500);\n }\n\n  const toggle=()=>{\n    if(mode===\"light\"){\n       setmode(\"dark\")\n       document.body.style.backgroundColor= '#2c4262';\n        showalert(\"dark mode is enabled\",\"success\");\n    }\n    else{\n     setmode(\"light\");\n     document.body.style.backgroundColor= 'white';\n     showalert(\"light mode is enabled\",\"success\");\n    }\n  }\n\n  return (\n  \n    <>\n  \n   <Navbar \n     title =\"Textutils1\" \n     abouttitle=\"About us\" \n     mode={mode}\n     toggle={toggle}  /> \n\n\n     <Alert\n        alert={alert} \n       /> \n       <TextForm \n          heading=\"Enter Your Text\" \n          mode={mode} \n          showalert={showalert}/>\n      \n    {/* < About /> */}\n\n\n\n\n    </>\n \n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}